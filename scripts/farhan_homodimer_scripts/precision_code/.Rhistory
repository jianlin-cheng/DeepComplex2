relax_1 <- read.csv("/data/farhan/SoftwareTools/HomopolymerProject/data/homodimers/scripts/avg_prec/inter_all_8886_02_09_2020/datasets/avg_inter_chain_precision_02_09_2020_relaxrem_0_relax_1.txt", sep="")
View(relax_1)
relax_2 <- read.csv("/data/farhan/SoftwareTools/HomopolymerProject/data/homodimers/scripts/avg_prec/inter_all_8886_02_09_2020/datasets/avg_inter_chain_precision_02_09_2020_relaxrem_0_relax_2.txt", sep="")
View(relax_2)
relax_012<-data.frame(rbind(relax_0,relax_1,relax_2))
View(relax_012)
table(relax_012$Relax)
x <- seq(-10, 10, length = 30)
y <- x
f <- function(x,y){r<-sqrt(x^2+y^2); 10 *sin(r)/r}
z<-outer(x,y,f)
z
View(relax_012)
persp3d(x=relax_012$Relax, y=names(relax_012)[3:9],z=relax_012[,3:9])
library(rgl)
persp3d(x=relax_012$Relax, y=names(relax_012)[3:9],z=relax_012[,3:9])
install.packages("latticeExtra")
install.packages("plotly")
#persp3d(x=relax_012$Relax, y=names(relax_012)[3:9],z=relax_012[,3:9])
library(plotly)
install.packages("plotly")
install.packages("tidyverse")
library(tidyverse)
library("ggplot2", lib.loc="~/R/x86_64-pc-linux-gnu-library/3.4")
df.team_data <- expand.grid(teams = c("Team A", "Team B", "Team C", "Team D")
,metrics = c("Metric 1", "Metric 2", "Metric 3", "Metric 4", "Metric 5")
)
# add variable: performance
set.seed(41)
df.team_data$performance <- rnorm(nrow(df.team_data))
#inspect
head(df.team_data)
View(df.team_data)
names(relax_012)[3:9]
relax_012_long<-reshape(relax_012, varying = names(relax_012)[3:9], direction = "long",idvar = "Name", sep="_")
relax_012_long<-reshape(relax_012, varying = c("Top.5" ,   "Top.10",   "Top.L.10", "Top.L.5" , "Top.L.2" , "Top.L",    "Top.2L" ) , direction = "long",idvar = "Name", sep="_")
library("tidyr", lib.loc="~/R/x86_64-pc-linux-gnu-library/3.4")
library("reshape2", lib.loc="~/R/x86_64-pc-linux-gnu-library/3.4")
relax_012_long<-gather(relax_012,key="Top",value = "Precision",-Name, -Relax)
View(relax_012_long)
ggplot(data = relax_012_long, aes(x = Top, y = Relax)) +
geom_tile(aes(fill = Precision))
avg.precision<- relax_012_long %>% group_by(Relax,Top) %>% summarise(Avg_precision= mean(Precision))
library("dplyr", lib.loc="~/R/x86_64-pc-linux-gnu-library/3.4")
library(dplyr)
avg.precision<- relax_012_long %>% group_by(Relax,Top) %>% summarise(Avg_precision= mean(Precision))
View(avg.precision)
library(ggplot2)
ggplot(data = avg.precision, aes(x = Top, y = Relax)) +
geom_tile(aes(fill = Avg_precision))
ggplot(data = avg.precision, aes(x = Top, y = Relax, fill = Avg_precision)) +
geom_tile() + scale_fill_gradient2(low = "yellow", high = "red", mid = "white",
midpoint = 0, limit = c(-1,1), space = "Lab",
name="Average\Precision")
ggplot(data = avg.precision, aes(x = Top, y = Relax, fill = Avg_precision)) +
geom_tile() + scale_fill_gradient2(low = "yellow", high = "red", mid = "white",
midpoint = 0, limit = c(-1,1), space = "Lab",
name="Average\nPrecision")
ggplot(data = avg.precision, aes(x = Top, y = Relax, fill = Avg_precision)) +
geom_tile() + scale_fill_gradient2(low = "yellow", high = "red", mid = "white",
midpoint = 0,
name="Average\nPrecision")
with(avg.precision, avg.precision[order(Top),])
avg.precision$Top<-ordered(avg.precision$Top, levels=c("Top.5" ,   "Top.10",   "Top.L.10", "Top.L.5" , "Top.L.2" , "Top.L",    "Top.2L" ))
names(relax_012)[3:9]<-c("1","2","3","4","5","6","7")
View(avg.precision)
relax_012_long<-gather(relax_012,key="Top",value = "Precision",-Name, -Relax)
avg.precision<- relax_012_long %>% group_by(Relax,Top) %>% summarise(Avg_precision= mean(Precision))
with(avg.precision, avg.precision[order(Top),])
ggplot(data = avg.precision, aes(x = Top, y = Relax, fill = Avg_precision)) +
geom_tile(xlab=c("Top.5" ,   "Top.10",   "Top.L.10", "Top.L.5" , "Top.L.2" , "Top.L",    "Top.2L")) + scale_fill_gradient2(low = "yellow", high = "red", mid = "white",
midpoint = 0,
name="Average\nPrecision")
ggplot(data = avg.precision, aes(x = Top, y = Relax, fill = Avg_precision)) + labs(x=c("Top.5" ,   "Top.10",   "Top.L.10", "Top.L.5" , "Top.L.2" , "Top.L",    "Top.2L"))
geom_tile() + scale_fill_gradient2(low = "yellow", high = "red", mid = "white",
midpoint = 0,
name="Average\nPrecision")
gplot(data = avg.precision, aes(x = Top, y = Relax, fill = Avg_precision)) +
labs(x=c("Top.5" ,   "Top.10",   "Top.L.10", "Top.L.5" , "Top.L.2" , "Top.L",    "Top.2L"))+
geom_tile() + scale_fill_gradient2(low = "yellow", high = "red", mid = "white",
midpoint = 0,
name="Average\nPrecision")
ggplot(data = avg.precision, aes(x = Top, y = Relax, fill = Avg_precision)) +
labs(x=c("Top.5" ,   "Top.10",   "Top.L.10", "Top.L.5" , "Top.L.2" , "Top.L",    "Top.2L"))+
geom_tile() + scale_fill_gradient2(low = "yellow", high = "red", mid = "white",
midpoint = 0,
name="Average\nPrecision")
ggplot(data = avg.precision, aes(x = Top, y = Relax, fill = Avg_precision)) +
geom_tile(xlab("Top.5" ,   "Top.10",   "Top.L.10", "Top.L.5" , "Top.L.2" , "Top.L",    "Top.2L")) +
scale_fill_gradient2(low = "yellow", high = "red", mid = "white", name="Average\nPrecision")
ggplot(data = avg.precision, aes(x = Top, y = Relax, fill = Avg_precision)) +
geom_tile() +
xlab("Top.5" ,   "Top.10",   "Top.L.10", "Top.L.5" , "Top.L.2" , "Top.L",    "Top.2L")+
scale_fill_gradient2(low = "yellow", high = "red", mid = "white", name="Average\nPrecision")
ggplot(data = avg.precision, aes(x = Top, y = Relax, fill = Avg_precision)) +
geom_tile() +
scale_x_discrete(labels=c("Top.5" ,"Top.10", "Top.L.10", "Top.L.5" , "Top.L.2" , "Top.L",  "Top.2L"))+
scale_fill_gradient2(low = "yellow", high = "red", mid = "white", name="Average\nPrecision")
avg.precision <- avg.precision %>% arrange(desc(Relax))
View(avg.precision)
ggplot(data = avg.precision, aes(x = Top, y = Relax, fill = Avg_precision)) +
geom_tile() +
scale_x_discrete(labels=c("Top.5" ,"Top.10", "Top.L.10", "Top.L.5" , "Top.L.2" , "Top.L",  "Top.2L"))+
scale_fill_gradient2(low = "yellow", high = "red", mid = "white", name="Average\nPrecision")
avg.precision %>% arrange(desc(Relax)) %>% ggplot(data = avg.precision, aes(x = Top, y = Relax, fill = Avg_precision)) +
geom_tile() +
scale_x_discrete(labels=c("Top.5" ,"Top.10", "Top.L.10", "Top.L.5" , "Top.L.2" , "Top.L",  "Top.2L"))+
scale_fill_gradient2(low = "yellow", high = "red", mid = "white", name="Average\nPrecision")
ggplot(data = avg.precision, aes(x = Top, y = desc(Relax), fill = Avg_precision)) +
geom_tile() +
scale_x_discrete(labels=c("Top.5" ,"Top.10", "Top.L.10", "Top.L.5" , "Top.L.2" , "Top.L",  "Top.2L"))+
scale_fill_gradient2(low = "yellow", high = "red", mid = "white", name="Average\nPrecision")
ggplot(data = avg.precision, aes(x = Top, y = desc(Relax), fill = Avg_precision)) +
geom_tile() +
scale_x_discrete(labels=c("Top.5" ,"Top.10", "Top.L.10", "Top.L.5" , "Top.L.2" , "Top.L",  "Top.2L"))+
scale_y_discrete((labels=c("2","1","0"))) +
scale_fill_gradient2(low = "yellow", high = "red", mid = "white", name="Average\nPrecision")
ggplot(data = avg.precision, aes(x = Top, y = desc(Relax), fill = Avg_precision)) +
geom_tile() +
scale_x_discrete(labels=c("Top.5" ,"Top.10", "Top.L.10", "Top.L.5" , "Top.L.2" , "Top.L",  "Top.2L"))+
scale_y_continuous((labels=c("2","1","0"))) +
scale_fill_gradient2(low = "yellow", high = "red", mid = "white", name="Average\nPrecision")
avg.precision$Relax<-as.factor(avg.precision$Relax,levels=c("2","1","0"))
avg.precision$Relax<-as.factor(avg.precision$Relax)
ggplot(data = avg.precision, aes(x = Top, y = Relax, fill = Avg_precision)) +
geom_tile() +
scale_x_discrete(labels=c("Top.5" ,"Top.10", "Top.L.10", "Top.L.5" , "Top.L.2" , "Top.L",  "Top.2L"))+
scale_fill_gradient2(low = "yellow", high = "red", mid = "white", name="Average\nPrecision")
ggplot(data = avg.precision, aes(x = Top, y = Relax, fill = Avg_precision)) +
geom_tile() +
scale_x_discrete(labels=c("Top.5" ,"Top.10", "Top.L.10", "Top.L.5" , "Top.L.2" , "Top.L",  "Top.2L"))+
scale_fill_gradient2(low = "yellow", high = "red", mid = "white", name="Average\nPrecision")+
geom_text(aes(label=round(Avg_precision,1)))
ggplot(data = avg.precision, aes(x = Top, y = Relax, fill = Avg_precision)) +
geom_tile() +
scale_x_discrete(labels=c("Top.5" ,"Top.10", "Top.L.10", "Top.L.5" , "Top.L.2" , "Top.L",  "Top.2L"))+
scale_fill_gradient2(low = "yellow", high = "red", name="Average\nPrecision")+
geom_text(aes(label=round(Avg_precision,1)))
names(relax_0)
View(relax_012)
View(relax_012_long)
ggplot(data = avg.precision, aes(x = Top, y = Relax, fill = Avg_precision)) +
geom_title() +
scale_x_discrete(labels=c("Top.5" ,"Top.10", "Top.L.10", "Top.L.5" , "Top.L.2" , "Top.L",  "Top.2L"))+
scale_fill_gradient2(low = "yellow", high = "red", name="Average\nPrecision")+
geom_text(aes(label=round(Avg_precision,1)))
ggplot(data = avg.precision, aes(x = Top, y = Relax, fill = Avg_precision)) +
scale_x_discrete(labels=c("Top.5" ,"Top.10", "Top.L.10", "Top.L.5" , "Top.L.2" , "Top.L",  "Top.2L"))+
scale_fill_gradient2(low = "yellow", high = "red", name="Average\nPrecision")+
geom_text(aes(label=round(Avg_precision,1)))
ggplot(data = avg.precision, aes(x = Top, y = Relax, fill = Avg_precision)) + geom_tile()+
scale_x_discrete(labels=c("Top.5" ,"Top.10", "Top.L.10", "Top.L.5" , "Top.L.2" , "Top.L",  "Top.2L"))+
scale_fill_gradient2(low = "yellow", high = "red", name="Average\nPrecision")+
geom_text(aes(label=round(Avg_precision,1)))
ggplot(data = avg.precision, aes(x = Top, y = Relax, fill = Avg_precision)) + geom_tile()+
scale_x_discrete(labels=c("Top.5" ,"Top.10", "Top.L.10", "Top.L.5" , "Top.L.2" , "Top.L",  "Top.2L"))+
scale_fill_gradient2(low = "yellow", high = "red",limits=c(0,100), name="Average\nPrecision")+
geom_text(aes(label=round(Avg_precision,1)))
ggplot(avg.precision, aes(factor(Top), fill=Avg_precision) + geom_bar() + facet_grid(Top~Relax)
)
ggplot(avg.precision, aes(x=factor(Top), fill=Avg_precision) )+ geom_bar() + facet_grid(Top~Relax)
ggplot(avg.precision, aes(x=factor(Top), y=Relax, fill=Avg_precision) )+ geom_bar()
ggplot(avg.precision, aes(x=factor(Top), y=Relax, fill=Avg_precision) )+ geom_bar(stat="identity")
ggplot(avg.precision, aes(x=Top, y=Relax, fill=Avg_precision) )+ geom_bar(stat="identity")+facet_wrap(~Relax)
ggplot(avg.precision, aes(x=Top, y=Avg_precision) )+ geom_bar(stat="identity")+facet_wrap(~Relax)
ggplot(avg.precision, aes(x=Top, y=Avg_precision) )+ geom_bar(stat="identity",fill="blue")+facet_wrap(~Relax)+ ylab("Average Precision")
ggplot(avg.precision, aes(x=Top, y=Avg_precision) )+ geom_bar(stat="identity",fill="blue")+
facet_wrap(~Relax, labeller=variable_labeller)+
ylab("Average Precision")+
scale_fill_gradient2(low = "yellow", high = "red",limits=c(0,100), name="Average\nPrecision")
ggplot(avg.precision, aes(x=Top, y=Avg_precision) )+ geom_bar(stat="identity",fill="blue")+
facet_wrap(~Relax, labeller=list("Relax 0","Relax 1","Relax 2"))+
ylab("Average Precision")+
scale_fill_gradient2(low = "yellow", high = "red",limits=c(0,100), name="Average\nPrecision")
ggplot(avg.precision, aes(x=Top, y=Avg_precision) )+ geom_bar(stat="identity",fill="blue")+
facet_wrap(~Relax, labeller=c("Relax 0","Relax 1","Relax 2"))+
ylab("Average Precision")+
scale_fill_gradient2(low = "yellow", high = "red",limits=c(0,100), name="Average\nPrecision")
ggplot(avg.precision, aes(x=Top, y=Avg_precision) )+ geom_bar(stat="identity",fill="blue")+
facet_wrap(~Relax)+
ylab("Average Precision")+
scale_fill_gradient2(low = "yellow", high = "red",limits=c(0,100), name="Average\nPrecision")
ggplot(avg.precision, aes(x=Top, y=Avg_precision) )+ geom_bar(stat="identity",fill="blue")+
xlab("Top.5" ,"Top.10", "Top.L.10", "Top.L.5" , "Top.L.2" , "Top.L",  "Top.2L")+
facet_wrap(~Relax)+
ylab("Average Precision")
ggplot(avg.precision, aes(x=Top, y=Avg_precision) )+ geom_bar(stat="identity",fill="blue")+
xlab("Top.5","Top.10","Top.L.10","Top.L.5" ,"Top.L.2" ,"Top.L", "Top.2L")+
facet_wrap(~Relax)+
ylab("Average Precision")
ggplot(avg.precision, aes(x=Top, y=Avg_precision,colour=Avg_precision) )+ geom_bar(stat="identity")+
scale_x_discrete(labels=c("Top.5" ,"Top.10", "Top.L.10", "Top.L.5" , "Top.L.2" , "Top.L",  "Top.2L"))+
facet_wrap(~Relax)+
ylab("Average Precision")+ scale_colour_gradientn(colours=rainbow(4))
ggplot(avg.precision, aes(x=Top, y=Avg_precision,colour=Avg_precision) )+ geom_bar(stat="identity",fill=Avg_precision)+
scale_x_discrete(labels=c("Top.5" ,"Top.10", "Top.L.10", "Top.L.5" , "Top.L.2" , "Top.L",  "Top.2L"))+
facet_wrap(~Relax)+
ylab("Average Precision")+ scale_colour_gradientn(colours=rainbow(4))
ggplot(avg.precision, aes(x=Top, y=Avg_precision,colour=Avg_precision) )+ geom_bar(stat="identity",fill=rainbow(4))+
scale_x_discrete(labels=c("Top.5" ,"Top.10", "Top.L.10", "Top.L.5" , "Top.L.2" , "Top.L",  "Top.2L"))+
facet_wrap(~Relax)+
ylab("Average Precision")+ scale_colour_gradientn(colours=rainbow(4))
ggplot(avg.precision, aes(x=Top, y=Avg_precision,colour=Avg_precision) )+ geom_bar(stat="identity",fill=blue)+
scale_x_discrete(labels=c("Top.5" ,"Top.10", "Top.L.10", "Top.L.5" , "Top.L.2" , "Top.L",  "Top.2L"))+
facet_wrap(~Relax)+
ylab("Average Precision")+ scale_colour_gradientn(colours=rainbow(4))
ggplot(avg.precision, aes(x=Top, y=Avg_precision,colour=Avg_precision) )+ geom_bar(stat="identity",fill="white")+
scale_x_discrete(labels=c("Top.5" ,"Top.10", "Top.L.10", "Top.L.5" , "Top.L.2" , "Top.L",  "Top.2L"))+
facet_wrap(~Relax)+
ylab("Average Precision")+ scale_colour_gradientn(colours=rainbow(4))
ggplot(avg.precision, aes(x=Top, y=Avg_precision,colour=Avg_precision) )+
geom_bar(stat="identity",aes(fill=Relax),colour="black",position=position_dodge())+
scale_x_discrete(labels=c("Top.5" ,"Top.10", "Top.L.10", "Top.L.5" , "Top.L.2" , "Top.L",  "Top.2L"))+
ylab("Average Precision")
ggplot(avg.precision, aes(x=Top, y=Avg_precision,colour=Avg_precision) )+
geom_line(aes(colour=Relax, group= Relax))+
geom_point(aes(colour=Relax), size=3)+
scale_x_discrete(labels=c("Top.5" ,"Top.10", "Top.L.10", "Top.L.5" , "Top.L.2" , "Top.L",  "Top.2L"))+
ylab("Average Precision")
View(relax_012_long)
summary(relax_012_long$Precision)
summary(relax_012_long$Precision[relax_012_long$Top=="1"])
length(relax_012_long$Precision[relax_012_long$Top=="1"])
var(relax_012_long$Precision[relax_012_long$Top=="1"])
var(relax_012_long$Precision[relax_012_long$Top=="1"& relax_012_long$Relax=="1"])
summary(relax_012_long$Precision[relax_012_long$Top=="1"& relax_012_long$Relax=="1"])
hist(relax_012_long$Precision[relax_012_long$Top=="1"& relax_012_long$Relax=="1"], freq=T)
density.prec.11 <- density(relax_012_long$Precision[relax_012_long$Top=="1"& relax_012_long$Relax=="1"])
plot(density.prec.11, main="Kernel Density of Miles Per Gallon")
polygon(density.prec.11, col="red", border="blue")
plot(density.prec.11, main="Kernel Density of Miles Per Gallon")
polygon(density.prec.11, border="blue")
install.packages("sm")
library(sm)
sm.density.compare(relax_012_long$Precision[relax_012_long$Top=="1"],relax_012_long$Relax[relax_012_long$Top=="1"])
colfill<-c(2:(2+length(levels(relax_012_long$Relax[relax_012_long$Top=="1"]))))
legend(locator(1), levels(relax_012_long$Relax[relax_012_long$Top=="1"]), fill=colfill)
sm.density.compare(relax_012_long$Precision[relax_012_long$Top=="1"],relax_012_long$Relax[relax_012_long$Top=="1"],
xlab="Precision for Top-5")
legend("topright",levels=relax_012_long$Relax[relax_012_long$Top=="1"])
sm.density.compare(relax_012_long$Precision[relax_012_long$Top=="1"],relax_012_long$Relax[relax_012_long$Top=="1"],
xlab="Precision for Top-5")
legend("topright",levels=factor(relax_012_long$Relax[relax_012_long$Top=="1"]))
sm.density.compare(relax_012_long$Precision[relax_012_long$Top=="1"],relax_012_long$Relax[relax_012_long$Top=="1"],
xlab="Precision for Top-5")
legend("topright",legend=c("0","1","2"))
relax.f =factor(relax_012_long$Relax, levels=c(0,1,2), labels=c("0","1","2"))
colfill<-c(2:(2+length(levels(relax.f))))
legend("right",inset=c(-0.3,0), fill=colfill,legend=c("0","1","2"))
sm.density.compare(relax_012_long$Precision[relax_012_long$Top=="1"],relax_012_long$Relax[relax_012_long$Top=="1"],
xlab="Precision for Top-5")
colfill<-c(2:(2+length(levels(relax.f))))
legend("right",inset=c(-0.3,0), fill=colfill,legend=c("0","1","2"))
levels(relax.f)
sm.density.compare(relax_012_long$Precision[relax_012_long$Top=="1"],relax_012_long$Relax[relax_012_long$Top=="1"],
xlab="Precision for Top-5")
colfill<-c(2:(2+length(levels(relax.f))))
legend("right",inset=c(-0.3,0), levels(relax.f), fill=colfill)
sm.density.compare(relax_012_long$Precision[relax_012_long$Top=="1"],relax_012_long$Relax[relax_012_long$Top=="1"],
xlab="Precision for Top-5")
colfill<-c(2:(2+length(levels(relax.f))))
legend("right",inset=c(100,0.06), levels(relax.f), fill=colfill)
sm.density.compare(relax_012_long$Precision[relax_012_long$Top=="1"],relax_012_long$Relax[relax_012_long$Top=="1"],
xlab="Precision for Top-5")
colfill<-c(2:(2+length(levels(relax.f))))
legend(locator(1), levels(relax.f), fill=colfill)
sm.density.compare(relax_012_long$Precision[relax_012_long$Top=="1"],relax_012_long$Relax[relax_012_long$Top=="1"],
xlab="Precision for Top-5")
colfill<-c(2:(2+length(levels(relax.f))))
legend(100,0.06, levels(relax.f), fill=colfill)
View(relax_012)
sm.density.compare(relax_012_long$Precision[relax_012_long$Top=="2"],relax_012_long$Relax[relax_012_long$Top=="2"],
xlab="Precision for Top-10")
colfill<-c(2:(2+length(levels(relax.f))))
legend(100,0.06, levels(relax.f), fill=colfill)
sm.density.compare(relax_012_long$Precision[relax_012_long$Top=="3"],relax_012_long$Relax[relax_012_long$Top=="3"],
xlab="Precision for Top-L-10")
colfill<-c(2:(2+length(levels(relax.f))))
legend(100,0.06, levels(relax.f), fill=colfill)
sm.density.compare(relax_012_long$Precision[relax_012_long$Top=="4"],relax_012_long$Relax[relax_012_long$Top=="4"],
xlab="Precision for Top-L-5")
colfill<-c(2:(2+length(levels(relax.f))))
legend(100,0.06, levels(relax.f), fill=colfill)
sm.density.compare(relax_012_long$Precision[relax_012_long$Top=="5"],relax_012_long$Relax[relax_012_long$Top=="5"],
xlab="Precision for Top-L-2")
colfill<-c(2:(2+length(levels(relax.f))))
legend(100,0.06, levels(relax.f), fill=colfill)
sm.density.compare(relax_012_long$Precision[relax_012_long$Top=="7"],relax_012_long$Relax[relax_012_long$Top=="7"],
xlab="Precision for Top-2L")
colfill<-c(2:(2+length(levels(relax.f))))
legend(100,0.06, levels(relax.f), fill=colfill)
par(mfrow=c(4,3))
# Top 5
relax.f =factor(relax_012_long$Relax, levels=c(0,1,2), labels=c("0","1","2"))
sm.density.compare(relax_012_long$Precision[relax_012_long$Top=="1"],relax_012_long$Relax[relax_012_long$Top=="1"],
xlab="Precision for Top-5")
colfill<-c(2:(2+length(levels(relax.f))))
legend(100,0.06, levels(relax.f), fill=colfill)
# Top 10
sm.density.compare(relax_012_long$Precision[relax_012_long$Top=="2"],relax_012_long$Relax[relax_012_long$Top=="2"],
xlab="Precision for Top-10")
colfill<-c(2:(2+length(levels(relax.f))))
legend(100,0.06, levels(relax.f), fill=colfill)
# Top L 10
sm.density.compare(relax_012_long$Precision[relax_012_long$Top=="3"],relax_012_long$Relax[relax_012_long$Top=="3"],
xlab="Precision for Top-L-10")
colfill<-c(2:(2+length(levels(relax.f))))
legend(100,0.06, levels(relax.f), fill=colfill)
# Top L 5
sm.density.compare(relax_012_long$Precision[relax_012_long$Top=="4"],relax_012_long$Relax[relax_012_long$Top=="4"],
xlab="Precision for Top-L-5")
colfill<-c(2:(2+length(levels(relax.f))))
legend(100,0.06, levels(relax.f), fill=colfill)
# Top L 2
sm.density.compare(relax_012_long$Precision[relax_012_long$Top=="5"],relax_012_long$Relax[relax_012_long$Top=="5"],
xlab="Precision for Top-L-2")
colfill<-c(2:(2+length(levels(relax.f))))
legend(100,0.06, levels(relax.f), fill=colfill)
# Top L
sm.density.compare(relax_012_long$Precision[relax_012_long$Top=="6"],relax_012_long$Relax[relax_012_long$Top=="6"],
xlab="Precision for Top-L")
colfill<-c(2:(2+length(levels(relax.f))))
legend(100,0.06, levels(relax.f), fill=colfill)
# Top 2L
sm.density.compare(relax_012_long$Precision[relax_012_long$Top=="7"],relax_012_long$Relax[relax_012_long$Top=="7"],
xlab="Precision for Top-2L")
colfill<-c(2:(2+length(levels(relax.f))))
legend(100,0.06, levels(relax.f), fill=colfill)
png("density_comparison_by_Top.png",length=15,height=12.5)
par(mfrow=c(4,3))
# Top 5
relax.f =factor(relax_012_long$Relax, levels=c(0,1,2), labels=c("0","1","2"))
sm.density.compare(relax_012_long$Precision[relax_012_long$Top=="1"],relax_012_long$Relax[relax_012_long$Top=="1"],
xlab="Precision for Top-5")
colfill<-c(2:(2+length(levels(relax.f))))
legend(100,0.06, levels(relax.f), fill=colfill)
# Top 10
sm.density.compare(relax_012_long$Precision[relax_012_long$Top=="2"],relax_012_long$Relax[relax_012_long$Top=="2"],
xlab="Precision for Top-10")
colfill<-c(2:(2+length(levels(relax.f))))
legend(100,0.06, levels(relax.f), fill=colfill)
# Top L 10
sm.density.compare(relax_012_long$Precision[relax_012_long$Top=="3"],relax_012_long$Relax[relax_012_long$Top=="3"],
xlab="Precision for Top-L-10")
colfill<-c(2:(2+length(levels(relax.f))))
legend(100,0.06, levels(relax.f), fill=colfill)
# Top L 5
sm.density.compare(relax_012_long$Precision[relax_012_long$Top=="4"],relax_012_long$Relax[relax_012_long$Top=="4"],
xlab="Precision for Top-L-5")
colfill<-c(2:(2+length(levels(relax.f))))
legend(100,0.06, levels(relax.f), fill=colfill)
# Top L 2
sm.density.compare(relax_012_long$Precision[relax_012_long$Top=="5"],relax_012_long$Relax[relax_012_long$Top=="5"],
xlab="Precision for Top-L-2")
colfill<-c(2:(2+length(levels(relax.f))))
legend(100,0.06, levels(relax.f), fill=colfill)
# Top L
sm.density.compare(relax_012_long$Precision[relax_012_long$Top=="6"],relax_012_long$Relax[relax_012_long$Top=="6"],
xlab="Precision for Top-L")
colfill<-c(2:(2+length(levels(relax.f))))
legend(100,0.06, levels(relax.f), fill=colfill)
# Top 2L
sm.density.compare(relax_012_long$Precision[relax_012_long$Top=="7"],relax_012_long$Relax[relax_012_long$Top=="7"],
xlab="Precision for Top-2L")
colfill<-c(2:(2+length(levels(relax.f))))
legend(100,0.06, levels(relax.f), fill=colfill)
dev.off()
png("density_comparison_by_Top.png",width=15,height=12.5)
par(mfrow=c(4,3))
# Top 5
relax.f =factor(relax_012_long$Relax, levels=c(0,1,2), labels=c("0","1","2"))
sm.density.compare(relax_012_long$Precision[relax_012_long$Top=="1"],relax_012_long$Relax[relax_012_long$Top=="1"],
xlab="Precision for Top-5")
colfill<-c(2:(2+length(levels(relax.f))))
legend(100,0.06, levels(relax.f), fill=colfill)
# Top 10
sm.density.compare(relax_012_long$Precision[relax_012_long$Top=="2"],relax_012_long$Relax[relax_012_long$Top=="2"],
xlab="Precision for Top-10")
colfill<-c(2:(2+length(levels(relax.f))))
legend(100,0.06, levels(relax.f), fill=colfill)
# Top L 10
sm.density.compare(relax_012_long$Precision[relax_012_long$Top=="3"],relax_012_long$Relax[relax_012_long$Top=="3"],
xlab="Precision for Top-L-10")
colfill<-c(2:(2+length(levels(relax.f))))
legend(100,0.06, levels(relax.f), fill=colfill)
# Top L 5
sm.density.compare(relax_012_long$Precision[relax_012_long$Top=="4"],relax_012_long$Relax[relax_012_long$Top=="4"],
xlab="Precision for Top-L-5")
colfill<-c(2:(2+length(levels(relax.f))))
legend(100,0.06, levels(relax.f), fill=colfill)
# Top L 2
sm.density.compare(relax_012_long$Precision[relax_012_long$Top=="5"],relax_012_long$Relax[relax_012_long$Top=="5"],
xlab="Precision for Top-L-2")
colfill<-c(2:(2+length(levels(relax.f))))
legend(100,0.06, levels(relax.f), fill=colfill)
# Top L
sm.density.compare(relax_012_long$Precision[relax_012_long$Top=="6"],relax_012_long$Relax[relax_012_long$Top=="6"],
xlab="Precision for Top-L")
colfill<-c(2:(2+length(levels(relax.f))))
legend(100,0.06, levels(relax.f), fill=colfill)
# Top 2L
sm.density.compare(relax_012_long$Precision[relax_012_long$Top=="7"],relax_012_long$Relax[relax_012_long$Top=="7"],
xlab="Precision for Top-2L")
colfill<-c(2:(2+length(levels(relax.f))))
legend(100,0.06, levels(relax.f), fill=colfill)
dev.off()
png("density_comparison_by_Top.png")
par(mfrow=c(4,3))
# Top 5
relax.f =factor(relax_012_long$Relax, levels=c(0,1,2), labels=c("0","1","2"))
sm.density.compare(relax_012_long$Precision[relax_012_long$Top=="1"],relax_012_long$Relax[relax_012_long$Top=="1"],
xlab="Precision for Top-5")
colfill<-c(2:(2+length(levels(relax.f))))
legend(100,0.06, levels(relax.f), fill=colfill)
# Top 10
sm.density.compare(relax_012_long$Precision[relax_012_long$Top=="2"],relax_012_long$Relax[relax_012_long$Top=="2"],
xlab="Precision for Top-10")
colfill<-c(2:(2+length(levels(relax.f))))
legend(100,0.06, levels(relax.f), fill=colfill)
# Top L 10
sm.density.compare(relax_012_long$Precision[relax_012_long$Top=="3"],relax_012_long$Relax[relax_012_long$Top=="3"],
xlab="Precision for Top-L-10")
colfill<-c(2:(2+length(levels(relax.f))))
legend(100,0.06, levels(relax.f), fill=colfill)
# Top L 5
sm.density.compare(relax_012_long$Precision[relax_012_long$Top=="4"],relax_012_long$Relax[relax_012_long$Top=="4"],
xlab="Precision for Top-L-5")
colfill<-c(2:(2+length(levels(relax.f))))
legend(100,0.06, levels(relax.f), fill=colfill)
# Top L 2
sm.density.compare(relax_012_long$Precision[relax_012_long$Top=="5"],relax_012_long$Relax[relax_012_long$Top=="5"],
xlab="Precision for Top-L-2")
colfill<-c(2:(2+length(levels(relax.f))))
legend(100,0.06, levels(relax.f), fill=colfill)
# Top L
sm.density.compare(relax_012_long$Precision[relax_012_long$Top=="6"],relax_012_long$Relax[relax_012_long$Top=="6"],
xlab="Precision for Top-L")
colfill<-c(2:(2+length(levels(relax.f))))
legend(100,0.06, levels(relax.f), fill=colfill)
# Top 2L
sm.density.compare(relax_012_long$Precision[relax_012_long$Top=="7"],relax_012_long$Relax[relax_012_long$Top=="7"],
xlab="Precision for Top-2L")
colfill<-c(2:(2+length(levels(relax.f))))
legend(100,0.06, levels(relax.f), fill=colfill)
dev.off()
relax.f =factor(relax_012_long$Relax, levels=c(0,1,2), labels=c("0","1","2"))
sm.density.compare(relax_012_long$Precision[relax_012_long$Top=="1"],relax_012_long$Relax[relax_012_long$Top=="1"],
xlab="Precision for Top-5")
colfill<-c(2:(2+length(levels(relax.f))))
legend(100,0.06, levels(relax.f), fill=colfill)
relax.f =factor(relax_012_long$Relax, levels=c(0,1,2), labels=c("0","1","2"))
sm.density.compare(relax_012_long$Precision[relax_012_long$Top=="1"],relax_012_long$Relax[relax_012_long$Top=="1"],
xlab="Precision for Top-5",lty=2,lwd=2)
colfill<-c(2:(2+length(levels(relax.f))))
legend(100,0.06, levels(relax.f), fill=colfill)
relax.f =factor(relax_012_long$Relax, levels=c(0,1,2), labels=c("0","1","2"))
sm.density.compare(relax_012_long$Precision[relax_012_long$Top=="1"],relax_012_long$Relax[relax_012_long$Top=="1"],
xlab="Precision for Top-5",lty=1,lwd=2)
colfill<-c(2:(2+length(levels(relax.f))))
legend(100,0.06, levels(relax.f), fill=colfill)
#### Add Relax_remov variable
relax_012_long$Relax_rem<-"0"
avg.precision$Relax_rem<-"0"
View(avg.precision)
setwd("/data/farhan/SoftwareTools/DeepComplex/scripts/farhan_homodimer_scripts/precision_code")
infile="./T1032R_out/T1032_CD.rr"
pdbfile="./T1032R_out/T1032R_AB.rr"
outfile="testR.png"
png(outfile, width=1600, height=1600, res=300)
#png("/data/farhan/SoftwareTools/HomopolymerProject/scripts/2L_long_full_AIM2.png", width=1600, height=1600, res=300)
#infile2 = "/data/farhan/SoftwareTools/HomopolymerProject/scripts/inter_chain_results/Actin/coneva/actin_monomer.rr"
#infile = "/data/farhan/SoftwareTools/HomopolymerProject/scripts/inter_chain_results/Actin/coneva/actin_multimer_AB.rr"
#Final output:
#True_Interchain_color: Blue
#Predicted_Interchain_color: Green
#Interchain (multimer) file info
con <- file(infile, "rt")
seqlen <- readLines(con, 1)
print (seqlen)
L <- nchar(seqlen)
print (L)
data <- read.table(infile, skip = 1, header = FALSE)
col_count <- ncol(data)
#data$V7 <- abs(data$V1-data$V2)
par(mar=c(2,2,0.5,0.5))
# Plot for an RR file with multiple sources
#native <- subset(data, data$V4 == "8")
native<-data
plot(native$V1, native$V2, col="blue", pch=0, xlab = NULL, ylab = NULL, ylim=c(L, 0), xlim=c(0, L))
#points(native$V2, native$V1, col="red", pch=0, xlab = NULL, ylab = NULL, ylim=c(L, 0), xlim=c(0, L))
#Intrachain (monomer) file info
#con2 <- file(infile2, "rt")
#seqlen2 <- readLines(con2, 1)
#L2 <- nchar(seqlen2)
#data2 <- read.table(infile2, skip = 1, header = FALSE)
#col_count2 <- ncol(data2)
##data2$V7 <- abs(data2$V1-data2$V2)
#predic <- subset(data2, data2$V4 == "8")
#points(predic$V2, predic$V1, col="green", xlab = NULL, ylab = NULL, ylim=c(2*L, 0), xlim=c(0, L*2), pch = 1)
##points(predic$V1, predic$V2, col="red", xlab = NULL, ylab = NULL, ylim=c(L, 0), xlim=c(0, L), pch = 2)
#PDB file info
con3 <- file(pdbfile, "rt")
seqlen3 <- readLines(con3, 1)
L3 <- nchar(seqlen3)
data3 <- read.table(pdbfile, skip = 1, header = FALSE)
col_count3 <- ncol(data3)
#data3$V7 <- abs(data3$V1-data3$V2)
#pdb <- subset(data3, data3$V4 == "6")
pdb=data3
points(pdb$V1, pdb$V2, col="green", xlab = NULL, ylab = NULL, ylim=c(L, 0), xlim=c(0, L), pch = 1)
#legend("topright", bty="n", legend=c("Interchain","DNCON2","Intrachain_PDB"), pch = c(0,2,1),text.font=2,cex=1, col=c("red","green","blue"))
#text(0, L, "Top-2L", cex=2.0, adj = c(0,1), pos=4)
